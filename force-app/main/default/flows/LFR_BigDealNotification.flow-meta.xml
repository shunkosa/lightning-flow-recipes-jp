<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>商談レコードにChatter投稿します。</description>
        <name>action_PostToRecord</name>
        <label>レコードに投稿</label>
        <locationX>176</locationX>
        <locationY>253</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>create_Task</targetReference>
        </connector>
        <inputParameters>
            <name>text</name>
            <value>
                <stringValue>@[{!$Record.OwnerId}] 商談が成立しました！</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>51.0</apiVersion>
    <description>金額が1,000,000円以上の商談が成立した場合にChatter投稿とToDoの作成(期日を1週間後にする) を行うレコードトリガフロー(変更後フロー)です。</description>
    <formulas>
        <description>商談の完了予定日の7日後を表す数式です。レコードを作成するアクションでToDoの期日として使用します。</description>
        <name>formula_ActivityDate</name>
        <dataType>Date</dataType>
        <expression>{!$Record.CloseDate} + 7</expression>
    </formulas>
    <interviewLabel>[Flow Recipes] 商談成立後にChatter通知とフォローアップToDoを作成 {!$Flow.CurrentDateTime}</interviewLabel>
    <label>[Flow Recipes] 商談成立後にChatter通知とフォローアップToDoを作成</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>子レコードを作成する例です。商談に関連するToDoを作成します。ToDoの期日として完了予定日の1週間後を設定しますが、ここからインラインでは設定できないため、事前に完了予定日の1週間後を表す数式を作成して、このアクションから参照します。</description>
        <name>create_Task</name>
        <label>フォローアップToDoの作成</label>
        <locationX>176</locationX>
        <locationY>373</locationY>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>formula_ActivityDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>フォローアップToDo</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>action_PostToRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>IsWon</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Amount</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <numberValue>1000000.0</numberValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
</Flow>
